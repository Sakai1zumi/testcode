#include<stdio.h>

int main()
{
	int i;
	char c;
	scanf("%d %c", &i, &c);
	printf("i=%d,c=%d,c='%c'\n", i, c, c);
	return 0;
}

//int main()
//{
//	int i;
//	char c;
//	//scanf("%c", &c);
//	scanf("%d", &i);
//	c = i;
//	printf("c=%d\n", c);
//	printf("c='%c'\n", c);
//	if (49 == '1')//49的整数形式和字符形式
//	{
//		printf("ok\n");
//	}
//	return 0;
//}

//int main()
//{
//	char c;
//	char d;
//	c = 1;//数字1
//	d = '1';//字符1
//	if (c == d)
//	{
//		printf("相等\n");
//	}
//	else
//	{
//		printf("不相等\n");
//	}
//	printf("c=%d\n", c);
//	printf("d=%d\n", d);
//	return 0;
//}
 

////通过指针访问变量
//void f(int *p);
//void g(int k);
//int main()
//{
//	int i = 6;
//	printf("&i=%p\n", &i);
//	f(&i);
//	g(i);
//	return 0;
//}
//
//void f(int *p)
//{
//	printf(" p=%p\n", p);
//	printf("*p=%d\n", *p);
//	*p = 26;
//}
//
//void g(int k)
//{
//	printf("k=%d\n", k);
//}

//int main()
//{
//	int i = 0;
//	printf("%p\n", &i);
//	return 0;
//}

//int max(int a[], int len);
//int main()
//{
//	int a[] = { 2,3,4,56,33,1,43,7,32,12,776,43,267,72,89 };
//	int len = sizeof(a) / sizeof(a[0]);
//	//选择排序
//	for (int i = len - 1;i > 0;i--)
//	{
//		//选择排序
//		int maxid = max(a, i + 1);
//		//交换 a[maxid],a[len-1]
//		int t=a[maxid];
//		a[maxid] = a[i];
//		a[i] = t;
//	}
//	for (int j = 0;j < len;j++)
//	{
//		printf("%d ", a[j]);
//	}
//	printf("\n");
//	return 0;
//}
//
//int max(int a[], int len)
//{
//	int maxid = 0;
//	for (int i = 1;i < len;i++)
//	{
//		if (a[i] > a[maxid])
//		{
//			maxid = i;
//		}
//	}
//	return maxid;
//}

//二分搜索数组（搜索次数为log2n）
//int search(int key, int a[], int len)
//{
//	int ret = -1;
//	int left = 0;
//	int right = len - 1;
//	while (right > left)
//	{
//		int mid = (left + right) / 2;
//		if (a[mid] == key)
//		{
//			ret = mid;
//		}
//		else if (a[mid] > key)
//		{
//			right = mid - 1;
//		}
//		else if (a[mid] < key)
//		{
//			left = mid + 1;
//		}
//	}
//	return ret;
//}


//线性搜索数组
//int search(int key, int a[], int len);
//int main()
//{
//	int a[] = { 1,2,4,7,94,56,67,33,778,3268,564,88 };
//	int x;
//	scanf("%d", &x);
//	int r = search(x, a, sizeof(a) / sizeof(a[0]));
//	if (r == -1)
//	{
//		printf("查无此数");
//	}
//	else
//	{
//		printf("%d在数组中位于第%d位", x, r + 1);
//	}
//	return 0;
//}
//
//int search(int key, int a[], int len)
//{
//	int ret = -1;
//	for (int i = 0;i < len;i++)
//	{
//		if(key==a[i])
//			{
//				ret =i;
//				break;
//			}
//	}
//	return ret;
//}

//int main()
//{
//	int a[][3] = { {0},{1},{2} };
//	int i;int j;
//	for (i = 0;i < 3;i++)
//	{
//		for (j = 0;j < 3;j++)
//		{
//			printf("%d ", a[i][j]);
//		}
//	}
//	return 0;
//}

//判断素数程序，优化程序效率

//int isPrime(int x)
//{
//	int ret = 1;
//	int i;
//	if (x == 1 || x % 2 == 0 && x != 2)//判断是不是偶数
//	{
//		ret = 0;
//	}
//	for (i = 3;i < sqrt(x);i += 2)//从3到根号x
//	{
//		if (x%i == 0)
//		{
//			ret = 0;
//			break;
//		}
//	}
//	return ret;
//
//}
